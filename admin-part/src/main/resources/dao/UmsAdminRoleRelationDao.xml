<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pwc.dao.UmsAdminRoleRelationDao">

    <insert id="insertList">
        insert into ums_admin_role_relation(admin_id, role_id) values
        <foreach collection="list" separator="," item="item" index="index">
            (#{item.adminId}, #{item.roleId})
        </foreach>
    </insert>

    <select id="getRoleList" resultType="com.pwc.model.UmsRole">
        select r.id, r.name, r.description, r.admin_count as adminCount,
            r.create_time as createTime, r.status, r.sort
        from ums_admin_role_relation ar
            left join ums_role r on ar.role_id = r.id
        where ar.admin_id = #{adminId}
    </select>

    <select id="getResourceList" resultType="com.pwc.model.UmsResource">
        select re.id, re.create_time as createTime, re.name, re.url,
            re.description, re.category_id as categoryId
        from ums_admin_role_relation ar
            left join ums_role r on ar.role_id = r.id
            left join ums_role_resource_relation rr on r.id = rr.role_id
            left join ums_resource re on re.id = rr.resource_id
        where ar.admin_id = #{adminId}
            and re.id is not null
        group by re.id
    </select>

    <select id="getAdminIdList" resultType="java.lang.Long">
        select distinct ar.admin_id
        from ums_role_resource_relation rr
            left join ums_admin_role_relation ar on rr.role_id = ar.role_id
        where rr.resource_id = #{resourceId}
    </select>
</mapper>